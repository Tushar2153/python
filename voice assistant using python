import pyttsx3
import wikipedia
import datetime
import webbrowser 
import operator
import pywhatkit
import psutil
import os
import pyscreenshot
import cv2
import random
import pyautogui 
import speedtest
import pyjokes
import numpy as np
import pyautogui as pi
import speech_recognition as sr

engine=pyttsx3.init('sapi5')
voices=engine.getProperty('voices')
print(voices[1].id)
engine.setProperty('voice', voices[1].id)


def speak(audio):
    engine.say(audio)
    engine.runAndWait()

def wishme():
    hour = int (datetime.datetime.now().hour)
    if hour>=0 and hour<12:
        speak("good morning sir i am friday how may i help you ")
    elif hour>=12 and hour<18 :
        speak("good afternoon sir i am friday how may i help you")
    else:
        speak("i am friday how may i help you")
    
def takeCommand():
     
    r = sr.Recognizer()
     
    with sr.Microphone() as source:
         
        print("Listening...")
        r.adjust_for_ambient_noise(source)
        r.pause_threshold = 1
        audio = r.listen(source)

  
    try:
        print("Recognizing...")    
        query = r.recognize_google(audio, language ='en-in')
        print(f"User said: {query}\n")
  
    except Exception as e:
        print(e)    
        print("Unable to Recognize your voice.")  
        return "None"
     
    return query

wishme()
while True:
        query = takeCommand().lower()
        if 'wikipedia' in query:
            speak('Searching Wikipedia...')
            query = query.replace("wikipedia","")
            results= wikipedia.summary(query, sentences=2)
            speak("according to wikipedia")
            print(results)
            speak(results)

        elif 'friday' in query:
            print("yes sir")
            speak("yes sir")
        elif 'who are you' in query:
            print("my name is friday")
            speak("my name is friday")
        elif 'who created you' in query:
            speak("I was created by Tushar")
        elif 'thank you' in query:
            speak("welcome")
        elif 'how are you' in query:
            speak("i am fine sir, how about you")
        elif 'i am good' in query:
            speak("great, can i do something for you")
        elif 'thank you' in query:
            speak("welcome sir")
        elif 'open gmail' in query:
            webbrowser.open("gmail.com")
        elif 'open wikipedia' in query:
            webbrowser.open("wikipedia.com")
        elif 'open google' in query:
            webbrowser.open("google.com")
        elif 'open instagram' in query:
            webbrowser.open("instagram.com")
        elif 'open facebook' in query:
            webbrowser.open("facebook.com")    
        elif 'open chat' in query:
            webbrowser.open("chat.openai.com")    

        elif 'the time' in query:
            strTime=datetime.datetime.now().strftime("%H:%M:%S")
            speak(f"sir the time is {strTime} ")

        elif 'open code' in query:
            codepath="C:\\Users\\Varun\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe" 
            os.startfile(codepath)

        elif "calculate" in query:
            r=sr.Recognizer()
            with sr.Microphone() as source:
                speak("say what you want to calculate")
                print("listening...")
                r.adjust_for_ambient_noise(source)
                audio=r.listen(source)           
                my_string=r.recognize_google(audio)
                print(my_string)
                def get_operator_fn(op):
                    return{
                        '+' : operator.add, #plus
                        '-' : operator.sub, #minus
                        'x' : operator.mul, #multiplied by
                        'divided' : operator.__truediv__, #divided                
                        }[op]
                def eval_binary_expr(op1, oper, op2):
                    op1,op2=int(op1), int(op2)
                    return get_operator_fn(oper)(op1, op2)
                speak("your result is")
                print(eval_binary_expr(*(my_string.split())))
                speak(eval_binary_expr(*(my_string.split())))
                
        elif 'open notepad' in query:
            notepad_path="C:\\Windows\\System32\\notepad.exe"
            os.startfile(notepad_path)
        elif 'open camera' in query:
            cap=cv2.VideoCapture(0)
            while True:
                ret, frame = cap.read()
                cv2.imshow('frame', frame)
                if cv2.waitKey(1) & 0xff ==ord('c'):
                    break

            cap.release()
            cv2.destroyAllWindows()   

        elif 'play music' in query:
            music_dir='C:\\Users\\Default\\Music'   
            songs=os.listdir(music_dir)
            os.startfile(os.path.join(music_dir, random.choice(songs)))

        elif 'joke' in query:
            speak(pyjokes.get_joke())

        elif 'youtube' in query:
            speak("this is what i found on youtube")
            query =query.replace("youtube search","")
            query =query.replace("youtube","")
            query =query.replace("friday" ,"")
            web="https://www.youtube.com/results?search_query=" + query
            webbrowser.open(web)
            pywhatkit.playonyt(query)
            speak("done, sir")

        elif 'google' in query:
            import wikipedia as googlescrap
            query= query.replace("friday","")
            query= query.replace("google search","")
            query= query.replace("google","")
            speak("this is what i found on google")

            try:
                pywhatkit.search(query)
                result =googlescrap.summary(query,1)
                speak(result)
            except:
                speak("no speakable output available")

        elif "how much power left" in query or "how much power we have" in query or "battery" in query:

                battery=psutil.sensors_battery()
                percentage=battery.percent
                speak(f"sir our system have {percentage} percent battery")

        elif "internet speed" in query:
            st=speedtest.Speedtest()
            dl=st.download()
            up=st.upload()
            print(f"sir we have {dl} bit per second downloading speed and {up} bit per second uploading speed")
            speak(f"sir we have {dl} bit per second downloading speed and {up} bit per second uploading speed")



        elif "screenshot" in query:
            try:
                image = pyscreenshot.grab()
                image.show()
                a = datetime.datetime.now()
                if not os.path.exists("screenshot"):
                    os.mkdir("screenshot")
                image.save(f"screenshot/{a.day, a.month, a.year}_screenshot.png")
                print(f"Screenshot taken: screenshot/{a.day, a.month, a.year}_screenshot.png ")
            except Exception as e:
                print(e)
                print("unable to take screenshot")


        elif 'remember that' in query:
            speak("what should i remember sir")
            rememberMessage = takeCommand()
            speak("you said me to remember"+rememberMessage)
            remember = open('data.txt', 'w')
            remember.write(rememberMessage)
            remember.close()

        elif 'do you remember anything' in query:
            remember = open('data.txt', 'r')
            speak("you said me to remember that" + remember.read())

        elif 'volume up' in query:
            pyautogui.press("volumeup")

        elif 'volume down' in query:
            pyautogui.press("volumedown")

        elif 'volume mute' in query or 'mute' in query:
            pyautogui.press("volumemute")

